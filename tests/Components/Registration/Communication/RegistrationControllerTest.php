<?php

namespace App\Tests\Components\Registration\Communication;

use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class RegistrationControllerTest extends WebTestCase
{
    public function setUp(): void
    {
        $this->client = self::createClient();

        $this->entityManager = $this->createMock(EntityManagerInterface::class);
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testRegisterInvalid() : void
    {
        $this->client->request('POST', '/register');

        self::assertStringContainsString('Oops, your name doesn&#039;t look right', $this->client->getResponse()->getContent());
        self::assertStringContainsString('Oops, your email doesn&#039;t look right', $this->client->getResponse()->getContent());
        self::assertStringContainsString('Oops, your password doesn&#039;t look right', $this->client->getResponse()->getContent());
    }
    public function testRegisterValid() : void
    {
        // Create a valid user registration request with form data
        $this->client->request('POST', '/register', [
            'username' => 'ValidUsername',
            'email' => 'valid@example.com',
            'password' => 'ValidPassword123!',
        ]);

        self::assertStringNotContainsString('Oops, your name doesn&#039;t look right', $this->client->getResponse()->getContent());
        self::assertStringNotContainsString('Oops, your email doesn&#039;t look right', $this->client->getResponse()->getContent());
        self::assertStringNotContainsString('Oops, your password doesn&#039;t look right', $this->client->getResponse()->getContent());
    }
    public function tearDown() : void
    {
        parent::tearDown();
    }
}
